[project]
name = "voice-assistant-demo"
version = "0.1.0"
description = "Microphone-driven assistant demo that integrates speech recognition, OpenAI responses, and gTTS playback."
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
keywords = ["voice-assistant", "openai", "speech-recognition", "text-to-speech", "ai", "chatbot"]
authors = [
    {name = "Voice Assistant Maintainers"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "openai>=1.12.0,<2.0.0",
    "SpeechRecognition>=3.10.0,<4.0.0",
    "PyAudio>=0.2.14",
    "gTTS>=2.5.0,<3.0.0",
    "pygame>=2.5.0",
    "black>=25.9.0",
    "pylint>=3.3.9",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
]

[project.scripts]
voice-assistant = "voice_assistant.cli:main"

[project.urls]
Homepage = "https://github.com/yourusername/voice-assistant-demo"
Repository = "https://github.com/yourusername/voice-assistant-demo"
Issues = "https://github.com/yourusername/voice-assistant-demo/issues"
Documentation = "https://github.com/yourusername/voice-assistant-demo#readme"

[dependency-groups]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
]

[tool.uv.sources]
# Add custom package sources here if needed

[tool.ruff]
line-length = 120
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long (handled by formatter)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = [
    "--verbose",
    "--cov=voice_assistant",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.hatch.build.targets.wheel]
packages = ["src/voice_assistant"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
